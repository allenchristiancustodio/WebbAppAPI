// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.API.Models;

#nullable disable

namespace WebApp.API.Migrations
{
    [DbContext(typeof(AdventureWorks2017Context))]
    [Migration("20221213062536_loginUser")]
    partial class loginUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApp.API.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID")
                        .HasComment("Primary key for Product records.");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Class")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .IsFixedLength()
                        .HasComment("H = High, M = Medium, L = Low");

                    b.Property<string>("Color")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasComment("Product color.");

                    b.Property<int>("DaysToManufacture")
                        .HasColumnType("int")
                        .HasComment("Number of days required to manufacture the product.");

                    b.Property<DateTime?>("DiscontinuedDate")
                        .HasColumnType("datetime")
                        .HasComment("Date the product was discontinued.");

                    b.Property<bool?>("FinishedGoodsFlag")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))")
                        .HasComment("0 = Product is not a salable item. 1 = Product is salable.");

                    b.Property<decimal>("ListPrice")
                        .HasColumnType("money")
                        .HasComment("Selling price.");

                    b.Property<bool?>("MakeFlag")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))")
                        .HasComment("0 = Product is purchased, 1 = Product is manufactured in-house.");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("Date and time the record was last updated.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name of the product.");

                    b.Property<string>("ProductLine")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .IsFixedLength()
                        .HasComment("R = Road, M = Mountain, T = Touring, S = Standard");

                    b.Property<int?>("ProductModelId")
                        .HasColumnType("int")
                        .HasColumnName("ProductModelID")
                        .HasComment("Product is a member of this product model. Foreign key to ProductModel.ProductModelID.");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasComment("Unique product identification number.");

                    b.Property<int?>("ProductSubcategoryId")
                        .HasColumnType("int")
                        .HasColumnName("ProductSubcategoryID")
                        .HasComment("Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. ");

                    b.Property<short>("ReorderPoint")
                        .HasColumnType("smallint")
                        .HasComment("Inventory level that triggers a purchase order or work order. ");

                    b.Property<Guid>("Rowguid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())")
                        .HasComment("ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.");

                    b.Property<short>("SafetyStockLevel")
                        .HasColumnType("smallint")
                        .HasComment("Minimum inventory quantity. ");

                    b.Property<DateTime?>("SellEndDate")
                        .HasColumnType("datetime")
                        .HasComment("Date the product was no longer available for sale.");

                    b.Property<DateTime>("SellStartDate")
                        .HasColumnType("datetime")
                        .HasComment("Date the product was available for sale.");

                    b.Property<string>("Size")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasComment("Product size.");

                    b.Property<string>("SizeUnitMeasureCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength()
                        .HasComment("Unit of measure for Size column.");

                    b.Property<decimal>("StandardCost")
                        .HasColumnType("money")
                        .HasComment("Standard cost of the product.");

                    b.Property<string>("Style")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .IsFixedLength()
                        .HasComment("W = Womens, M = Mens, U = Universal");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(8,2)")
                        .HasComment("Product weight.");

                    b.Property<string>("WeightUnitMeasureCode")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength()
                        .HasComment("Unit of measure for Weight column.");

                    b.HasKey("ProductId");

                    b.HasIndex(new[] { "Name" }, "AK_Product_Name")
                        .IsUnique();

                    b.HasIndex(new[] { "ProductNumber" }, "AK_Product_ProductNumber")
                        .IsUnique();

                    b.HasIndex(new[] { "Rowguid" }, "AK_Product_rowguid")
                        .IsUnique();

                    b.ToTable("Product", "Production");

                    b.HasComment("Products sold or used in the manfacturing of sold products.");
                });

            modelBuilder.Entity("WebApp.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
